import { Head } from 'next/document';
import Header from '../components/atoms/Header';
import HeroSection from '@/components/organisms/HeroSection';
import CardsSection from '@/components/organisms/CardsSection';
import OffersSection from '@/components/organisms/OffersSection';
import Footer from '@/components/atoms/Footer';
import React, { useEffect, useState, useContext } from 'react';
import Login from '@/components/molecules/LoginModal';
import 'react-modern-drawer/dist/index.css';
import SignUpDrawer from '@/components/molecules/SignUpDrawer';
import { fetchProfile } from '@/app/authAPI';
import { Context } from '@/components/atoms/Context';
import ErrorBoundary from '@/components/atoms/ErrorBoundary';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

export default function Home() {
  const [isModalOpen, setModalOpen] = useState<boolean>(false);
  const [isDrawerOpen, setDrawerOpen] = useState<boolean>(false);
  const { setUser, setError } = useContext(Context);

  function closeModal(): void {
    setModalOpen(false);
  }

  function openModal(): void {
    setModalOpen(true);
  }

  function handleSignUpClick(): void {
    setDrawerOpen(true);
  }

  function closeDrawer(): void {
    setDrawerOpen(false);
  }

  useEffect(() => {
    async function getLogin() {
      try {
        const response = await fetchProfile();
        if (response && response.ok) {
          const profile = await response.json();
          if (profile.name && profile.email) {
            setUser(profile);
          }
        }
      } catch (error) {
        console.error('Error parsing response', error);
        localStorage.removeItem('@token');
      }
    }
    getLogin();
  }, []);

  return (
    <div>
      {/* <Head>
        <title>Comwell Hotels</title>
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <meta name='description' content='Generated by bla bla bla' />
        <link rel='icon' href='/favicon.ico' />
      </Head> */}
      <div>
        <ToastContainer
          position="top-center"
          autoClose={4000}
          hideProgressBar
          newestOnTop={false}
          closeOnClick
          rtl={false}
          pauseOnFocusLoss
          draggable
          pauseOnHover
          theme="dark"
        />
        <ErrorBoundary />
        <Header
          handleLocationClick={() => console.log('TODO')}
          handleProfileClick={openModal}
          handleMenuClick={() => console.log('TODO')}
        >
          <Login isOpen={isModalOpen} closeModal={closeModal} onSignUpClick={handleSignUpClick} />
        </Header>
        <main>
          <HeroSection />
          <CardsSection />
          <OffersSection />
          <SignUpDrawer isOpen={isDrawerOpen} onClose={closeDrawer} />
        </main>
        <Footer />
      </div>
    </div>
  );
}
